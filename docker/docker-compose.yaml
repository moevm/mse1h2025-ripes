services:
  postgres:
    container_name: service_db
    image: postgres:alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - service_db:/var/lib/postgresql/data
    networks:
      - service_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_HOST_PORT}:80"
    restart: unless-stopped
    networks:
      - service_net

  server:
    container_name: server
    image: server:latest
    build:
      context: .
      dockerfile: server.dockerfile
    restart: always
    networks:
      - service_net

  ripes:
    container_name: ripes
    image: ripes:latest
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    tty: true
    stdin_open: true
    environment:
      - DISPLAY=${DISPLAY}
    build:
      context: .
      dockerfile: ripes_new.dockerfile
    networks:
      - service_net
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

volumes:
  service_db:
  pgadmin-data:

networks:
  service_net:
    driver: bridge
